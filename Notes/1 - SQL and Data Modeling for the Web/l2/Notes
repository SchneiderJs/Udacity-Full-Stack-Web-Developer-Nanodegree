A Database Management System (DBMS):
    It is simply software that allows you to interact with a database (e.g., to access or modify the data in that database).
    There are many different Database Management Systems out there, but the particular DBMS we'll be using is called PostgreSQL (or simply Postgres).

Database Application Programming Interfaces (DBAPIs):
    Once we've looked at the basics of interacting with a database, we'll need to understand how to interface with 
    that database from another language or web server framework (such as Python, NodeJS, Ruby on Rails, etc.). This is where DBAPIs come in.

Psycopg2:
    It is a database adapter that allows us to interact with a Postgres database from Python.

Non Relational databases:
    Document stores: MongoDB
    Object databases: Perst form McObject
    Column stores: Cassandra
    Graph databases: Neo4j

Relational Databases:
    A database is a collection of data.
    A database system is a system for storing collections of data in some organized way.
    
Relational databases features:
    Persistence: Allowing access latter, after it was created.
    Shared source of truth: Accessible for many users.
    Ability to store many tipes of data: efficiency.
    Concurrenci control: Handling multiple db actions at once.

Relational databases charactetistics:
    All data are stored in tables.
    Every table is characterized by a list of columns with data types per column, and its set of data (organized in rows).
    Comes with rules for enforcing data integrity, such as constraints and triggers.

Primary Key:
    The primary key is the unique identifier for the entire row, referring to one or more columns.
    If there are more multiple columns for the primary key, then the set of primary key columns is known as a composite key.

Foreign Key:
    A primary key in another (foreign) table.
    Foreign keys are used to map relationships between tables.

SQL - Structured Query Language:
    The standard language for communicating with a relational database.
    The DBMS takes a SQL query and generates an execution plan for the database engine to follow.

SQL Commands:
    Manipuling data: INSERT, UPDATE, DELETE
    Querrying data: SELECT
    Structuring data: CREATE TABLE, ALTER TABLE, DROP TABLE, ADD COLUMN, DROP COLUMN
    Joins goupings: (INNER) JOIN, LEFT JOIN, RIGHT JOIN, GROUP BY, SUM, COUNT

Inner joins between two tables returns rows of data that exist across all joined tables, 
    excluding rows that may only exist in one of the tables but not the other table.

Outer joins return every row that exists in the left (in a left outer join) or right (in a right outer join) joined table, 
    while rendering NULL values on rows whose foreign key does not match a record in the other (right or left) table.

The "left" table refers to the table to the left of the JOIN statement in the query, whereas the "right" table 
    refers to the table to the right of the JOIN statement in the query.


